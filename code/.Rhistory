qplot(stock.data.dt$daily.returns, geom="histogram")
stock.data.df <- data.frame(stock.data)
stock.data.df <- data.frame(stock.data)
qplot(stock.data.dt$daily.returns, geom="histogram")
stock.data.df
qplot(stock.data.df$daily.returns, geom="histogram")
qplot(stock.data.df$daily.returns, geom="density")
stock.data<-cbind(stock.data,
stoch(stock.data[,c('High', 'Low', 'Close')]),
ADX(stock.data),
aroon(stock.data[,c('Close')]),
aroon(stock.data[,c('High', 'Low')]),
OBV(stock.data[,"Close"], stock.data[,"Volume"]),
chaikinAD(stock.data[,c('High', 'Low', 'Close')],
stock.data[,c('Volume')]),
MACD(stock.data),
RSI(stock.data[,'Close']),
DPO(stock.data),
ultimateOscillator(stock.data),
periodReturn(stock.data, period="daily"),
ma(x = stock.data$High, order = 5, centre = F))
plot(ma(x = stock.data$High, order = 5, centre = F))
lines(ma(x = stock.data$High, order = 5, centre = F))
ggplot(ma(x = stock.data$High, order = 5, centre = F))
plot()
plot(0)
lines(ma(x = stock.data$High, order = 5, centre = F))
length(ma(x = stock.data$High, order = 5, centre = F))
nrow(stock.data)
stock.data<-cbind(stock.data,
stoch(stock.data[,c('High', 'Low', 'Close')]),
ADX(stock.data),
aroon(stock.data[,c('Close')]),
aroon(stock.data[,c('High', 'Low')]),
OBV(stock.data[,"Close"], stock.data[,"Volume"]),
chaikinAD(stock.data[,c('High', 'Low', 'Close')],
stock.data[,c('Volume')]),
MACD(stock.data),
RSI(stock.data[,'Close']),
DPO(stock.data),
ultimateOscillator(stock.data),
periodReturn(stock.data, period="daily"),
ma(x = stock.data$High, order = 5, centre = F))
a <-ma(x = stock.data$High, order = 5, centre = F)
a
colnames(a)
qplot(1:length(a), a, geom="line")
qplot(1:length(a), stock.data$High - a, geom="line")
qplot(1:length(a), y=(stock.data$High - a), geom="line")
b = (stock.data$High - a)
qplot(1:length(a), y=b, geom="line")
qplot(1:length(a), b, geom="line")
b
colname(b)
colnames(b)
qplot(1:length(a), b$High, geom="line")
qplot(1:length(a), y=b$High, geom="line")
qplot(x=1:length(b$High), y=b$High, geom="line")
qplot(x=1:length(b$High), y=as.vector(b$High), geom="line")
qplot(x=1:20, y=as.vector(b$High[1:20]), geom="line")
qplot(x=1:50, y=as.vector(b$High[1:50]), geom="line")
qplot(x=1:n, y=as.vector(b$High[1:n]), geom="line")
n<-100
qplot(x=1:n, y=as.vector(b$High[1:n]), geom="line")
n<-500
qplot(x=1:n, y=as.vector(b$High[1:n]), geom="line")
fft(z =b)
fft(z =a)
fft(z = na.omit(b))
abs(fft(z = na.omit(b)))
plot(abs(fft(z = na.omit(b)))
)
plot(abs(fft(z = na.omit(b))))
frequency(b)
frequency(na.omit(b))
frequency(na.omit(b))
?frequency
cycle(na.omit(b))
frequency(na.omit(b))
b <- na.omit(ma(stock.data$High,order = 5,centre = F))
zcr <- function(x, order=5){
c <- Lag(x,k = 1) * x
c
}
zcr(b)
b <- na.omit(ma(stock.data$High,order = 5,centre = F))
zcr <- function(x, order=5){
c<-sum((Lag(x,k = 1) * x)<0)
c/(length(c)-1)
}
zcr(b)
zcr <- function(x, order=5){
c<-na.omit(sum((Lag(x,k = 1) * x)<0))
c/(length(c)-1)
}
zcr(b)
zcr <- function(x, order=5){
c<-na.omit(sum((Lag(x,k = 1) * x)<0)*1.0)
c/(length(c)-1)
}
zcr(b)
zcr <- function(x, order=5){
c<-na.omit(sum((Lag(x,k = 1) * x)<0)*1.0)
print(c)
c/(length(c)-1)
}
zcr(b)
zcr(b$High)
b
b <- na.omit(ma(stock.data$High,order = 5,centre = F))
zcr <- function(x, order=5){
c<-na.omit(sum((Lag(x,k = 1) * x)<0)*1.0)
print(c)
c/(length(c)-1)
}
zcr(b)
Lag(b,1)
Lag(b,1)[1:10]
Lag(b,1)*b
b <- b-na.omit(ma(stock.data$High,order = 5,centre = F))
zcr <- function(x, order=5){
c<-na.omit(sum((Lag(x,k = 1) * x)<0)*1.0)
print(c)
c/(length(c)-1)
}
zcr(b)
Lag(b,1)*b
b
b <- na.omit(b-ma(stock.data$High,order = 5,centre = F))
b <- na.omit(b-ma(stock.data$High,order = 5,centre = F))
b
b <- na.omit(stock.data$High-ma(stock.data$High,order = 5,centre = F))
zcr <- function(x, order=5){
c<-na.omit(sum((Lag(x,k = 1) * x)<0)*1.0)
print(c)
c/(length(c)-1)
}
zcr(b)
Lag(b,1)*b
b$High
zcr(b$High)
b <- na.omit(stock.data$High-ma(stock.data$High,order = 5,centre = F))
zcr <- function(x, order=5){
print(x)
c<-na.omit(sum((Lag(x,k = 1) * x)<0)*1.0)
print(c)
c/(length(c)-1)
}
zcr(b$High)
zcr <- function(x, order=5){
c<-sum((Lag(x,k = 1) * x)<0))
print(c)
c/(length(c)-1)
}
zcr(b$High)
zcr <- function(x, order=5){
c<-sum(((Lag(x,k = 1) * x)<0)*1.0))
print(c)
c/(length(c)-1)
}
zcr(b$High)
Lag(b,1)*b
Lag(b,1)*b<0
sum(Lag(b,1)*b<0)
zcr <- function(x, order=5){
c<-sum((na.omit(Lag(x,k = 1) * x)<0)*1.0))
print(c)
c/(length(c)-1)
}
zcr(b$High)
sum(na.omit(Lag(b,1)*b<0))
zcr <- function(x, order=5){
c<-sum(((na.omit(Lag(x,k = 1) * x)<0)*1.0))
print(c)
c/(length(c)-1)
}
zcr(b$High)
zcr <- function(x, order=5){
c<-sum(((na.omit(Lag(x,k = 1) * x)<0)*1.0))
print(c)
c/(length(x)-1)
}
zcr(b$High)
library(quantmod)
library(xts)
library(forecast)
library(TTR)
library(ggplot2)
library(GGally)
library(zoo)
cor.analisys <- function(df, threshold=0.8){
M<-abs(cor(df))
diag(M)<-0
high.cor<-data.frame(row=colnames(df)[which(M >= threshold, arr.ind=T)[,1]],
col=colnames(df)[which(M >= threshold, arr.ind=T)[,2]])
m.cor<-M[which(M >= threshold)]
high.cor$m.cor<-as.vector(m.cor)
high.cor
}
symbol = "YHOO"
stock.data <- getSymbols(symbol, src="yahoo", auto.assign = F)
colnames(stock.data)<-c("Open", "High", "Low", "Close", "Volume", "Adjusted")
stock.data<-cbind(stock.data,
stoch(stock.data[,c('High', 'Low', 'Close')]),
ADX(stock.data),
aroon(stock.data[,c('Close')]),
aroon(stock.data[,c('High', 'Low')]),
OBV(stock.data[,"Close"], stock.data[,"Volume"]),
chaikinAD(stock.data[,c('High', 'Low', 'Close')],
stock.data[,c('Volume')]),
MACD(stock.data),
RSI(stock.data[,'Close']),
DPO(stock.data),
ultimateOscillator(stock.data),
periodReturn(stock.data, period="daily"),
ma(x = stock.data$High, order = 5, centre = F))
stock.data <- na.omit(stock.data)
ggplot(cor.analisys(stock.data, 0.9),aes(x=factor(row),y=factor(col),fill=m.cor)) +
geom_tile() +
theme(axis.text.x = element_text(angle = 90, hjust = 1))
stock.data.df <- data.frame(stock.data)
pca.fit <- preProcess(data.frame(stock.data), method="pca", thresh = 0.85)
stock.data.df<-stock.data.df[,c('High','fastK','fastD','slowD','DIp','DIn')]
b <- na.omit(stock.data$High-ma(stock.data$High,order = 5,centre = F))
zcr <- function(x, order=5){
c<-sum(((na.omit(Lag(x,k = 1) * x)<0)*1.0))
print(c)
c/(length(x)-1)
}
zcr(b$High)
hist(stock.data$Volume)
ggplot(as.data.frame(stock.data), aes(x=Volume)) + geom_density()
mean(stock.data$Volume)
sd(stock.data$Volume)
mean(stock.data$Volume)-sd(stock.data$Volume)
mean(stock.data$Volume)- var(stock.data$Volume)
?var
var(stock.data$Volume)
mean(stock.data$Volume)-sd(stock.data$Volume)^2
colnames(stock.data)
ggplot(as.data.frame(stock.data), aes(x=daily.Return)) + geom_density()
ggplot(as.data.frame(stock.data), aes(x=daily.returns)) + geom_density()
ggplot(as.data.frame(stock.data), aes(x=daily.returns)) + geom_density()
ggplot(as.data.frame(stock.data), aes(x=daily.returns)) + geom_density() +
geom_density(aes(x=rnorm(300, mean=mean(stock.data$daily.returns), sd=sd(stock.data$daily.returns))))
geom_density(aes(x=rnorm(length(stock.data$daily.returns), mean=mean(stock.data$daily.returns), sd=sd(stock.data$daily.returns))))
geom_density(aes(x=rnorm(length(stock.data$daily.returns), mean=mean(stock.data$daily.returns), sd=sd(stock.data$daily.returns))))
geom_density(data.frame(x=rnorm(length(stock.data$daily.returns), mean=mean(stock.data$daily.returns), sd=sd(stock.data$daily.returns))))
geom_density(data.frame(x=rnorm(length(stock.data$daily.returns), mean=mean(stock.data$daily.returns), sd=sd(stock.data$daily.returns))),aes(x=x))
ggplot(as.data.frame(stock.data), aes(x=daily.returns)) + stat_qq()
ggplot(as.data.frame(stock.data), aes(sample=daily.returns)) + stat_qq()
ggplot(as.data.frame(stock.data), aes(sample=daily.returns)) + stat_qq(distribution=qt)
ggplot(as.data.frame(stock.data), aes(sample=daily.returns)) + stat_qq(distribution=qt,dparams = params["df"])
ggplot(as.data.frame(stock.data), aes(sample=daily.returns)) + stat_qq(distribution=qt,dparams = params["df"])
df=as.data.frame(stock.data)
ggplot(df, aes(sample=daily.returns)) + stat_qq(distribution=qt,dparams = params["df"])
ggplot(df, aes(sample=daily.returns)) + stat_qq(distribution=qt)
ggplot(df, aes(sample=daily.returns)) + stat_qq(distribution=norm)
ggplot(df, aes(sample=daily.returns)) + stat_qq(distribution=qt,dparams = 5)
ggplot(df, aes(sample=daily.returns)) + stat_qq(distribution=qt,dparams = length(df$daily.returns)-1)
ggplot(df, aes(sample=daily.returns)) + stat_qq(distribution=qpois)
ggplot(df, aes(sample=daily.returns)) + stat_qq(distribution=qpois, dparams = 1)
ggplot(df, aes(sample=daily.returns)) + stat_qq(distribution=qchisq, dparams = 1)
ggplot(df, aes(sample=daily.returns)) + stat_qq(distribution=qt,dparams = 1)
ggplot(df, aes(sample=daily.returns)) + stat_qq(distribution=qt,dparams = 0)
ggplot(df, aes(sample=daily.returns)) + stat_qq(distribution=qt,dparams = 100)
ggplot(df, aes(sample=daily.returns)) + stat_qq(distribution=qt,dparams = length(df$daily.returns))
ggplot(df, aes(sample=daily.returns)) + stat_qq(distribution=qnorm)
ggplot(df, aes(sample=daily.returns)) + stat_qq(distribution=qbeta())
ggplot(df, aes(sample=daily.returns)) + stat_qq(distribution=qbeta)
ggplot(df, aes(sample=log10(daily.returns-min(df$daily.returns)))) + stat_qq(distribution=qnorm)
ggplot(df, aes(sample=log10(daily.returns-min(df$daily.returns)+1))) + stat_qq(distribution=qnorm)
ggplot(df, aes(sample=log10(daily.returns-min(df$daily.returns)+1))-log10(1)) + stat_qq(distribution=qnorm)
ggplot(df, aes(sample=log10(daily.returns-min(df$daily.returns)+1)) + stat_qq(distribution=qnorm)
)
log10(2)
10^0.1
ggplot(df, aes(sample=log10(daily.returns-min(df$daily.returns)+1)) + geom_density()
)
ggplot(df, aes(sample=log10(daily.returns-min(df$daily.returns)+1))) + geom_density()
ggplot(df, aes(sample=log10(daily.returns-min(df$daily.returns)+1))) + geom_density()
ggplot(df, aes(sample=log10(daily.returns-min(df$daily.returns)+1))) + geom_density()
getQuote("QQQQ;SPY;^VXN",what=yahooQF(c("Bid","Ask")))
getQuote("YHOO",what=yahooQF(c("Bid","Ask")))
getQuote("YHOO",what=yahooQF(c("Close")))
?yahooQFF
?yahooQF
var(df$daily.returns)
var(df$Adjusted)
plot(rpois(100,1))
plot(rpois(100,1)) + line()
plot() + lines(rpois(100,1))
library(ggplot())
library(ggplot
)
library(ggplot2)
ggplot(data.frame(u=rpois(1000,1),x=1:1000), aes(x=x,y=u))+geom_path()
a<-rnorm(100,0,1)
b<-rpois(100,1)
cor(a,b)
c<- rbeta(100,1,2)
cor(b,c)
cor(a,c)
cor(a,b)-cor(b,c)
cor(a, rep(0,100))
cor(a, rep(0.0001,100))
cor(a, rep(0.001,100))
cor(a, rnorm(100,0,0.00001))
cor(a, rnorm(100,0,0.000001))
cor(a, rnorm(100,0,0.000001))
cor(a, rnorm(100,0,0.0000001))
cor(a, rnorm(100,0,0.00000001))
cor(a, rnorm(100,0,0.000000001))
cor(a, rnorm(100,0,0.0000000001))
cor(a, rnorm(100,0,0.0000000001))
cor(a, rnorm(100,0,0.0000000001))
cor(a, rnorm(100,0,0.0000000001))
cor(a, rnorm(100,0,0.0000000001))
cor(a, rnorm(100,0,0.0000000001))
cor(rnorm(100,0,1), rnorm(100,0,0.0000000001))
cor(rnorm(100,0,1), rnorm(100,0,0.0000000001))
cor(rnorm(100,0,1), rnorm(100,0,0.0000000001))
cor(rnorm(100,0,1), rnorm(100,0,0.0000000001))
cor(rnorm(100,0,1), rnorm(100,0,0.0000000001))
setwd("~/Documents/Data Products/Sunspots/code")
library(httr)
start.year = 1874
stop.year = 2016
url ="http://solarscience.msfc.nasa.gov/greenwch/"
year <- start.year
r <- GET(paste(url, year, sep=""))
r
library(httr)
start.year = 1875
stop.year = 2016
url ="http://solarscience.msfc.nasa.gov/greenwch/"
year <- start.year
r <- GET(paste(url, year, sep=""))
r
library(httr)
start.year = 1875
stop.year = 2016
url ="http://solarscience.msfc.nasa.gov/greenwch/"
year <- 2000
r <- GET(paste(url, year, sep=""))
r
library(httr)
start.year = 1875
stop.year = 2016
url ="http://solarscience.msfc.nasa.gov/greenwch/"
year <- 2000
r <- GET(paste(url, year,'.txt', sep=""))
r
ibrary(httr)
start.year = 1875
stop.year = 2016
url ="http://solarscience.msfc.nasa.gov/greenwch/"
year <- 2000
r <- GET(paste(url, 'g', year,'.txt', sep=""))
r
r$status_code
for(year in seq(from=start.year, to=stop.year, by=1)){print(year)}
source('~/Documents/Data Products/Sunspots/code/getSunspotData.R')
paste('a', 'b', sep="")
r
cass(r)
class(r)
as.character(r)
library(httr)
start.year = 1875
stop.year = 1880
data <- NULL
url ="http://solarscience.msfc.nasa.gov/greenwch/"
for(year in seq(from=start.year, to=stop.year, by=1))
{
r <- GET(paste(url, 'g', year,'.txt', sep=""))
if(r$status_code == 200){
write(x=as.character(r), file=paste('g', year, '.txt', sep=""))
data<-paste(data, as.character(r))
}
}
source('~/Documents/Data Products/Sunspots/code/getSunspotData.R')
source('~/Documents/Data Products/Sunspots/code/getSunspotData.R')
source('~/Documents/Data Products/Sunspots/code/getSunspotData.R')
rm()
source('~/Documents/Data Products/Sunspots/code/getSunspotData.R')
data
write(x=as.character(r), file='../data/Sunspots/data.txt')
library(httr)
start.year = 1875
stop.year = 2016
data <- NULL
url ="http://solarscience.msfc.nasa.gov/greenwch/"
for(year in seq(from=start.year, to=stop.year, by=1))
{
r <- GET(paste(url, 'g', year,'.txt', sep=""))
if(r$status_code == 200){
write(x=as.character(r), file=paste('../data/Sunspots/by.year/g', year, '.txt', sep=""))
data<-paste(data, as.character(r), sep="")
}
}
write(x=as.character(r), file='../data/Sunspots/data.txt')
data
write(x=as.character(r), file='../data/Sunspots/data.txt')
write(x=as.character(data), file='../data/Sunspots/data.txt')
source('~/Documents/Data Products/Sunspots/code/cleaning.R')
qplot(sunspot.yearly$mean.cnt, sunspot.yearly$mean.LOTI, geom='point') + geom_smooth(method=lm)
ggplot(sunspot.temperature, aes(x=datetime)) +
geom_line(aes(y=mean.cnt*10), colour="blue") +
geom_smooth(aes(y=mean.cnt*10), method=lm) +
geom_line(aes(y=LOTI), colour="red") +
geom_smooth(aes(y=LOTI), method=lm)
fft(sunspot.month)
fft(sunspot.monthly)
plot(fft(sunspot.monthly$mean.cnt)
)
plot(fft(sunspot.monthly$mean.cnt), type = 'line')
plot(fft(sunspot.monthly$mean.cnt), type = 'line')
sunspot.temperature <- sunspot.monthly %>%
inner_join(temperature, by='datetime') %>%
select(datetime, LOTI, mean.cnt:sd.density)
sunspot.temperature <- sunspot.monthly %>%
inner_join(temperature, by='datetime') %>%
select(datetime, LOTI, mean.cnt:sd.density)
ggplot(sunspot.temperature, aes(x=datetime)) +
geom_line(aes(y=mean.cnt*10), colour="blue") +
geom_smooth(aes(y=mean.cnt*10), method=lm) +
geom_line(aes(y=LOTI), colour="red") +
geom_smooth(aes(y=LOTI), method=lm)
cor(sunspot.monthly$mean.cnt, temperature$LOTI)
length(sunspot.monthly)
length(sunspot.monthly$mean.cnt)
cor(sunspot.temperature$mean.cnt, sunspot.temperature$LOTI)
cor(sunspot.temperature$sd.cnt, sunspot.temperature$LOTI)
cor(sunspot.temperature$sd.cnt, sunspot.temperature$LOTI,na.rm=T)
cor(sunspot.temperature$mean.mean.dist, sunspot.temperature$LOTI)
cor(sunspot.temperature$mean.total.area, sunspot.temperature$LOTI)
ggplot(sunspot.temperature, aes(x=datetime)) +
geom_line(aes(y=mean.total.area*10), colour="blue") +
geom_smooth(aes(y=mean.total.area*10), method=lm) +
geom_line(aes(y=LOTI), colour="red") +
geom_smooth(aes(y=LOTI), method=lm)
ggplot(sunspot.temperature, aes(x=datetime)) +
geom_line(aes(y=mean.total.area/10), colour="blue") +
geom_smooth(aes(y=mean.total.area/10), method=lm) +
geom_line(aes(y=LOTI), colour="red") +
geom_smooth(aes(y=LOTI), method=lm)
ggplot(sunspot.temperature, aes(x=datetime)) +
geom_line(aes(y=density/10), colour="blue") +
geom_smooth(aes(y=density/10), method=lm) +
geom_line(aes(y=LOTI), colour="red") +
geom_smooth(aes(y=LOTI), method=lm)
ggplot(sunspot.temperature, aes(x=datetime)) +
geom_line(aes(y=mean.density/10), colour="blue") +
geom_smooth(aes(y=mean.density/10), method=lm) +
geom_line(aes(y=LOTI), colour="red") +
geom_smooth(aes(y=LOTI), method=lm)
ggplot(sunspot.temperature, aes(x=datetime)) +
geom_line(aes(y=mean.cnt*10), colour="blue") +
geom_smooth(aes(y=mean.cnt*10), method=lm) +
geom_line(aes(y=LOTI), colour="red") +
geom_smooth(aes(y=LOTI), method=lm)
ggplot(sunspot.temperature, aes(x=datetime)) +
geom_line(aes(y=mean.cnt*10), colour="blue") +
geom_smooth(aes(y=mean.cnt*10), method=lm) +
geom_line(aes(y=LOTI), colour="red") +
geom_smooth(aes(y=LOTI), method=lm)
qplot(sunspot.yearly$mean.cnt, sunspot.yearly$mean.LOTI, geom='point') + geom_smooth(method=lm)
qplot(sunspot.yearly$sd.cnt, sunspot.yearly$mean.LOTI, geom='point') + geom_smooth(method=lm)
qplot(sunspot.yearly$sd.cnt, sunspot.yearly$sd.LOTI, geom='point') + geom_smooth(method=lm)
qplot(sunspot.yearly$sd.cnt, sunspot.yearly$sd.LOTI, geom='point') + geom_smooth(method=lm)
ggplot(sunspot.temperature, aes(x=datetime)) +
geom_line(aes(y=mean.cnt*10), colour="blue") +
geom_smooth(aes(y=mean.cnt*10), method=lm) +
geom_line(aes(y=LOTI), colour="red") +
geom_smooth(aes(y=LOTI), method=lm)
plot(ccf(sunspot.temperature$mean.cnt, sunspot.temperature$LOTI))
plot(ccf(sunspot.temperature$mean.cnt, sunspot.temperature$LOTI), type="correlation")
plot(ccf(sunspot.temperature$mean.cnt, sunspot.temperature$LOTI), type=c("correlation"))
ccf(sunspot.temperature$mean.cnt, sunspot.temperature$LOTI, type=c("correlation"), plot=T)
ccf(sunspot.temperature$mean.cnt type=c("correlation"), plot=T)
ccf(sunspot.temperature$mean.cnt, type=c("correlation"), plot=T)
acf(sunspot.temperature$mean.cnt, type=c("correlation"), plot=T)
pacf(sunspot.temperature$mean.cnt, type=c("correlation"), plot=T)
pacf(sunspot.temperature$mean.cnt,  plot=T)
acf(sunspot.temperature$mean.cnt, type=c("correlation"), plot=T)
acf(sunspot.temperature$mean.cnt, type=c("correlation"), plot=T, demean=T)
acf(sunspot.temperature$mean.cnt, type=c("correlation"), plot=T)
acf(sunspot.temperature$mean.cnt, type=c("correlation"), plot=T, demean=F)
acf(sunspot.temperature$mean.cnt, type=c("correlation"), plot=T)
acf(sunspot.temperature$LOTI, type=c("correlation"), plot=T)
acf(sunspot.temperature$LOTI, type=c("cov"), plot=T)
acf(sunspot.temperature$LOTI, type=c("part"), plot=T)
sunspot[1,]
sunspot[100,]
sunspot$SPGT
sunspot$SPG
qplot(-sunspot.yearly$sd.cnt, sunspot.yearly$sd.LOTI, geom='point') + geom_smooth(method=lm)
qplot(-sunspot.yearly$mean.cnt, sunspot.yearly$sd.LOTI, geom='point') + geom_smooth(method=lm)
qplot(-sunspot.yearly$mean.cnt, sunspot.yearly$mean.LOTI, geom='point') + geom_smooth(method=lm)
xts(sunspot.monthly)
library(xts)
xts(sunspot.monthly)
xts(sunspot.monthly$datetime, select(sunspot.monthly, -datetime))
sunspot.monthly$d
xts(sunspot.monthly$datetime, select(sunspot.monthly, -datetime))
xts(as.Date(sunspot.monthly$datetime), select(sunspot.monthly, -datetime))
xts(as.Date(sunspot.monthly$datetime), sunspot.yearly$mean.cnt)
xts(sunspot.yearly$mean.cnt,as.Date(sunspot.monthly$datetime))
xts(sunspot.yearly$mean.cnt,as.Date(sunspot.monthly$datetime, format='%m/%d/%Y'))
xts(as.Date(sunspot.monthly$datetime, format='%m/%d/%Y'))
xts(sunspot.yearly$mean.cnt,as.Date(sunspot.monthly$datetime, format='%m/%d/%Y'))
